<Window x:Class="SecureTextEditor.GUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SecureTextEditor.GUI"
        xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
        xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
        mc:Ignorable="d"
        Title="Secure Text Editor" Height="480" Width="853"
        MinHeight="360" MinWidth="640">

    <Window.Resources>
        <!-- Define style for text editor -->
        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}" x:Key="EditorStyle">
            <Setter Property="FontFamily" Value="Consolas" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="AcceptsTab" Value="True" />
            <Setter Property="AcceptsReturn" Value="True" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
            <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="adonisExtensions:CursorSpotlightExtension.RelativeSpotlightSize" Value="0" />
            <Setter Property="adonisExtensions:CursorSpotlightExtension.MaxBlurRadius" Value="0" />
            <Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="Transparent" />
            <Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="Transparent" />
            <!-- We want to override the default (not theme like) context menu -->
            <Setter Property="ContextMenu" >
                <Setter.Value>
                    <ContextMenu>
                    </ContextMenu>
                </Setter.Value>
            </Setter>
            <!-- We want to override the themes hover effect -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2BackgroundBrush}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Window.Style>
        <Style TargetType="Window" BasedOn="{StaticResource {x:Type Window}}"/>
    </Window.Style>

    <Window.CommandBindings>
        <CommandBinding Command="Open" Executed="Open" />
        <CommandBinding Command="Save" Executed="Save" />
        <CommandBinding Command="Close" Executed="CloseApp" />
    </Window.CommandBindings>
    
    <Grid>
        <DockPanel LastChildFill="True">
            
            <!-- Menu -->
            <Menu DockPanel.Dock="Top" Height="25">
                <MenuItem Header="File" Height="25">
                    <MenuItem Header="New" Command="New" />
                    <MenuItem Header="Open..." Command="Open" />
                    <MenuItem Header="Save..." Command="Save" />
                    <Separator />
                    <MenuItem Header="Close" Command="Close" />
                </MenuItem>
                <MenuItem Header="Edit" Height="25">
                    <MenuItem Header="Undo" Command="Undo" />
                    <MenuItem Header="Redo" Command="Redo" />
                    <Separator/>
                    <MenuItem Header="Cut" Command="Cut" />
                    <MenuItem Header="Copy" Command="Copy" />
                    <MenuItem Header="Paste" Command="Paste" />
                    <MenuItem Header="Delete" Command="Delete" />
                    <MenuItem Header="Select All" Command="SelectAll" />
                </MenuItem>
                <MenuItem Header="View" Height="25">
                    <MenuItem Header="Zoom In" />
                    <MenuItem Header="Zoom Out" />
                    <MenuItem Header="Theme" Name="ThemeMenu">
                        <MenuItem Header="Light Mode" IsCheckable="True" IsChecked="False" Click="ThemeChanged" />
                        <MenuItem Header="Dark Mode" IsCheckable="True" IsChecked="True" Click="ThemeChanged" />
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Encoding" Height="25" Name="EncodingMenu">
                    <MenuItem Header="UTF-8" IsCheckable="True" IsChecked="True" Click="EncodingChanged" />
                    <MenuItem Header="ASCII" IsCheckable="True" IsChecked="False" Click="EncodingChanged" />
                </MenuItem>
            </Menu>
            
            <!-- Statusbar -->
            <Grid DockPanel.Dock="Bottom" Height="25" Margin="4 0 2 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="8" />
                    <ColumnDefinition Width="2.5*" />
                    <ColumnDefinition Width="8" />
                    <ColumnDefinition Width="1.5*" />
                    <ColumnDefinition Width="8" />
                    <ColumnDefinition Width="1.5*" />
                    <ColumnDefinition Width="8" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="8" />
                    <ColumnDefinition Width="25" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Text="&#xf00c;" FontFamily="{StaticResource FontAwesome}" />

                <!-- Vertical seperator -->
                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                </StackPanel>

                <TextBlock Grid.Column="2" VerticalAlignment="Center" Text="Ready" />

                <!-- Vertical seperator -->
                <StackPanel Grid.Column="3" Orientation="Horizontal">
                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                </StackPanel>
                
                <TextBlock Grid.Column="4" VerticalAlignment="Center" Text="Lines: 0" />

                <!-- Vertical seperator -->
                <StackPanel Grid.Column="5" Orientation="Horizontal">
                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                </StackPanel>

                <Grid Grid.Column="6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" VerticalAlignment="Center" Text="Ln: 0" />
                    <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="Col: 0" />
                    <TextBlock Grid.Column="2" VerticalAlignment="Center" Text="Sel: 0" />
                </Grid>
                
                <!-- Vertical seperator -->
                <StackPanel Grid.Column="7" Orientation="Horizontal">
                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                </StackPanel>

                <TextBlock Name="EncodingText" Grid.Column="8" VerticalAlignment="Center" Text="Encoding: UTF-8" />

                <!-- Vertical seperator -->
                <StackPanel Grid.Column="9" Orientation="Horizontal">
                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                </StackPanel>
                
                <ContentControl Grid.Column="10" Focusable="False" Margin="2" Visibility="Hidden"
                                ContentTemplate="{DynamicResource {x:Static adonisUi:Templates.LoadingCircle}}"
                                Foreground="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
            </Grid>
            
            <!-- Text editor tab control -->
            <TabControl Name="EditorTabControl">
                <!-- Define tab item template -->
                <TabControl.Resources>
                    <Style TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
                        <Setter Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <!-- Define context menu for tab items -->
                                    <DataTemplate.Resources>
                                        <Style TargetType="{x:Type StackPanel}">
                                            <Setter Property="ContextMenu">
                                                <Setter.Value>
                                                    <ContextMenu>
                                                        <MenuItem Header="Close" />
                                                    </ContextMenu>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataTemplate.Resources>
                                    
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock VerticalAlignment="Center" Text="{Binding}" />
                                        <Button Content="&#xf00d;" FontSize="8" FontFamily="{StaticResource FontAwesome}"
                                                Height="15" Width="15" Margin="5 0 0 0" Padding="0"
                                                VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                                    </StackPanel>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>

                <TabItem Header="New 1">
                    <TextBox Name="Editor" Style="{StaticResource EditorStyle}" />
                </TabItem>
            </TabControl>
        </DockPanel>
    </Grid>
</Window>
